<!--
//
//   Copyright 2016 Selmentdev
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Thumbs="clr-namespace:Selmentdev.Windows.Controls.Diagrams.Primitives"
    xmlns:Chromes="clr-namespace:Selmentdev.Windows.Controls.Diagrams.Primitives"
    xmlns:Adorners="clr-namespace:Selmentdev.Windows.Controls.Diagrams.Primitives"
    xmlns:Converters="clr-namespace:Selmentdev.Windows.Controls.Diagrams"
    xmlns:Diagrams="clr-namespace:Selmentdev.Windows.Controls.Diagrams"
    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <!--
    //
    // Common resources used by this style.
    //
    -->
    <Converters:DoubleFormatConverter x:Key="doubleFormatConverter" />

    <!--
    //
    // Move Thumb Template
    //
    -->
    <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type Thumbs:MoveThumb}">
        <Rectangle Fill="Transparent" />
    </ControlTemplate>

    <!--
    //
    // Common Diagram Designer Resources.
    //
    -->
    <LinearGradientBrush x:Key="DiagramShape_Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC4C4C4" Offset="0.92" />
        <GradientStop Color="White" />
        <GradientStop Color="#FFE2E0E0" Offset="0.5" />
        <GradientStop Color="#FFF1F1F1" Offset="0.49" />
        <GradientStop Color="#FFE5E5E5" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DiagramShape_BorderBrush" Color="#FF6C6C6C" />
    <SolidColorBrush x:Key="DiagramShape_Selected_BorderBrush" Color="#B23399FF" />
    <SolidColorBrush x:Key="DiagramShape_ActiveSelected_BorderBrush" Color="#7FB94630" />
    <SolidColorBrush x:Key="DiagramShape_Foreground" Color="#FF333333" />
    <SolidColorBrush x:Key="DiagramShape_EditTextBox_BorderBrush" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="DiagramShape_EditTextBox_Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="DiagramShape_Connection_Background" Color="#FF333333" />
    <SolidColorBrush x:Key="DiagramShape_Connection_BorderBrush" Color="#FF3F3F3F" />
    <System:Double x:Key="DiagramShape_FontSize">11</System:Double>
    <System:Int32 x:Key="DiagramShape_ZIndex">2</System:Int32>

    <!--
    //
    // Diagram Shape Style.
    //
    -->
    <Style x:Key="DiagramShapeStyle" TargetType="{x:Type Diagrams:DiagramShape}">
        <Setter Property="Control.Foreground" Value="{StaticResource DiagramShape_Foreground}" />
        <Setter Property="Control.Background" Value="{StaticResource DiagramShape_Background}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource DiagramShape_BorderBrush}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DiagramShape_FontSize}" />
        <Setter Property="Diagrams:DiagramItem.ZIndex" Value="{StaticResource DiagramShape_ZIndex}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="UIElement.RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Diagrams:DiagramItem.StrokeThickness" Value="1" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Diagrams:DiagramItem.StrokeDashArray" Value="1 0" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Diagrams:DiagramShape.Geometry" Value="M0,0L60,0 60,40 0,40z" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Diagrams:DiagramShape}">
                    <Grid>
                        <Path Name="Geometry" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" Opacity="{TemplateBinding UIElement.Opacity}" Stretch="Fill" Data="{TemplateBinding Diagrams:DiagramShape.Geometry}" StrokeThickness="{TemplateBinding Diagrams:DiagramItem.StrokeThickness}" StrokeDashArray="{TemplateBinding Diagrams:DiagramItem.StrokeDashArray}" SnapsToDevicePixels="True" />
                        <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        <Thumbs:MoveThumb x:Name="PART_MoveThumb" Template="{StaticResource MoveThumbTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}" />
                        <Adorners:DiagramItemDecorator x:Name="PART_DiagramItemDecorator" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_DiagramItemDecorator" Property="ShowDecorator" Value="True" />
                            <Setter TargetName="PART_MoveThumb" Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    //
    // Defaulted Diagram Shape style.
    //
    -->
    <Style x:Key="{x:Type Diagrams:DiagramShape}" TargetType="{x:Type Diagrams:DiagramShape}" BasedOn="{StaticResource DiagramShapeStyle}" />

    <!--
    //
    // Size Chrome.
    //
    // This chrome shows object dimensions when user resizes diagram shape.
    //
    -->
    <Style TargetType="{x:Type Chromes:SizeChrome}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Chromes:SizeChrome}">
                    <Grid SnapsToDevicePixels="True">
                        <Path Stroke="Red" StrokeThickness="1" Height="10" VerticalAlignment="Bottom" Margin="-2,0,-2,-15" Stretch="Fill" Data="M0,0 0,10 M 0,5 100,5 M 100,0 100,10" />
                        <TextBlock Text="{Binding Path=Width, Converter={StaticResource doubleFormatConverter}}" Background="White" Padding="3,0,3,0" Foreground="Red" Margin="0,0,0,-18" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                        <Path Stroke="Red" StrokeThickness="1" Width="10" HorizontalAlignment="Right" Margin="0,-2,-15,-2" Stretch="Fill" Data="M5,0 5,100 M 0,0 10,0 M 0,100 10,100" />
                        <TextBlock Text="{Binding Path=Height, Converter={StaticResource doubleFormatConverter}}" Background="White" Foreground="Red" Padding="3,0,3,0" Margin="0,0,-18,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="90" CenterX="1" CenterY="0.5" />
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    //
    // Rotate Chrome.
    //
    // This chrome shows object rotation angle when user rotates it.
    //
    -->
    <Style TargetType="{x:Type Chromes:RotateChrome}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Chromes:RotateChrome}">
                    <Grid SnapsToDevicePixels="True">
                        <Path Stroke="Red" StrokeThickness="1" Height="10" VerticalAlignment="Bottom" Margin="-2,0,-2,-15" Stretch="Fill" Data="M0,0 0,10 M 0,5 100,5 M 100,0 100,10" />
                        <TextBlock Text="{Binding Path=RotationAngle, Converter={StaticResource doubleFormatConverter}}" Background="White" Padding="3,0,3,0" Foreground="Red" Margin="0,0,0,-18" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                        <Path Stroke="Red" StrokeThickness="1" Width="10" HorizontalAlignment="Right" Margin="0,-2,-15,-2" Stretch="Fill" Data="M5,0 5,100 M 0,0 10,0 M 0,100 10,100" />
                        <TextBlock Text="{Binding Path=RotationAngle, Converter={StaticResource doubleFormatConverter}}" Background="White" Foreground="Red" Padding="3,0,3,0" Margin="0,0,-18,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="90" CenterX="1" CenterY="0.5" />
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    //
    // Thumb corner style.
    //
    -->
    <Style TargetType="{x:Type Shape}" x:Key="ThumbCorner">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Stroke" Value="Black" />
        <Setter Property="StrokeThickness" Value=".5" />
        <Setter Property="Width" Value="7" />
        <Setter Property="Height" Value="7" />
        <Setter Property="Margin" Value="-2" />
        <Setter Property="Fill" Value="Lime">
        </Setter>
    </Style>

    <!--
    //
    // Manipulate Chrome.
    //
    // This chrome is used to manipulate objects on designer surface.
    //
    -->
    <Style TargetType="{x:Type Chromes:ManipulateChrome}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Chromes:ManipulateChrome}">
                    <Grid>
                        <Grid Opacity="0" Margin="-1">
                            <Thumbs:RotateThumb Width="7" Height="7" Margin="0,-20,0,0" Cursor="Hand" VerticalAlignment="Top" HorizontalAlignment="Center" />
                            <Thumbs:ResizeThumb Height="3" Cursor="SizeNS" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
                            <Thumbs:ResizeThumb Width="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Left" />
                            <Thumbs:ResizeThumb Width="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Right" />
                            <Thumbs:ResizeThumb Height="3" Cursor="SizeNS" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" />
                            <Thumbs:ResizeThumb Width="7" Height="7" Margin="-2" Cursor="SizeNWSE" VerticalAlignment="Top" HorizontalAlignment="Left" />
                            <Thumbs:ResizeThumb Width="7" Height="7" Margin="-2" Cursor="SizeNESW" VerticalAlignment="Top" HorizontalAlignment="Right" />
                            <Thumbs:ResizeThumb Width="7" Height="7" Margin="-2" Cursor="SizeNESW" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                            <Thumbs:ResizeThumb Width="7" Height="7" Margin="-2" Cursor="SizeNWSE" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                        </Grid>
                        <Grid IsHitTestVisible="False" Opacity="1" Margin="-1">
                            <Rectangle SnapsToDevicePixels="True" StrokeThickness="1" Margin="1" Stroke="Black" StrokeDashArray="3 3" />
                            <Line StrokeThickness="1" X1="0" Y1="0" X2="0" Y2="20" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-19,0,0" Stroke="Black" StrokeDashArray="3 3" />
                            <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="-1,-20,0,0" />
                            <Rectangle Style="{StaticResource ThumbCorner}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            <Rectangle Style="{StaticResource ThumbCorner}" HorizontalAlignment="Right" VerticalAlignment="Top" />
                            <Rectangle Style="{StaticResource ThumbCorner}" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
                            <Rectangle Style="{StaticResource ThumbCorner}" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    //
    // This is experimental style for experimental control!!
    //
    -->
    <SolidColorBrush x:Key="Diagram_BorderBrushGrid" Color="#ffdcdcdc" />
    <SolidColorBrush x:Key="Diagram_BackgroundGrid" Color="Transparent" />
    <Style x:Key="SmdDiagramStyle" TargetType="{x:Type Diagrams:Diagram}">
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Background" Value="{StaticResource Diagram_BackgroundGrid}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource Diagram_BorderBrushGrid}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Diagrams:Diagram}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="2"/>
                        <Grid>
                            <Grid Name="BackPanel">
                                <!-- TODO: Place here background grids -->
                            </Grid>
                            <Grid Name="TouchablePanel" Background="#00FFFFFF">
                                <Grid Name="MainPanel" RenderTransformOrigin="0.5, 0.5">
                                    <!-- Diagram Surface -->
                                    <Canvas x:Name="ItemsHost" Background="#00FFFFFF" />
                                    <Canvas Name="AdornerSurface">
                                        <Rectangle Name="SelectionRectangle" Visibility="Collapsed" />
                                        <!-- Connector manipualtion adorner
                                            x:Name: ConnectionManipulationAdorner
                                            Visibility: Collapsed
                                        -->
                                        <!-- Groups adorner
                                            x:Name: GroupsAdorner
                                            HorizontalAlignment: Stretch
                                            VerticalAlignment: Stretch
                                        -->
                                        <!-- Alignment adorner
                                            x:Name: AlignmentAdorner
                                            HorizontalAlignment: Stretch
                                            VerticalAlignment: Stretch
                                        -->
                                        <!-- Drawing adorner
                                            x:Name: DrawingAdorner
                                            HorizontalAlignment: Stretch
                                            VerticalAlignment: Stretch
                                        -->
                                    </Canvas>
                                </Grid>
                                <Canvas Name="ManipulationAdornerHost">
                                    <!-- Manipulation adorner
                                        x:Name: ManipulationAdorner
                                        IsScalingEnabled: false
                                        Visibility: Collapsed
                                    -->
                                </Canvas>
                            </Grid>
                            <!-- Adorner surface
                                x:Name: FrontPanel
                                Visibility: IsInformationAdornerVisible + converter
                                Content: ItemInformationAdorner
                                    x:Name: ItemInformationAdorner
                            -->
                        </Grid>
                        <Rectangle Grid.Row="1" Grid.Column="1" Fill="Red" />
                        <ScrollBar Name="VerticalScrollbar" Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Row="0" Grid.Column="1" />
                        <ScrollBar Name="HorizontalScrollbar" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="0" />
                    </Grid>
                    <!--<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Diagrams:Diagram}" TargetType="{x:Type Diagrams:Diagram}" BasedOn="{StaticResource SmdDiagramStyle}" />
</ResourceDictionary>
